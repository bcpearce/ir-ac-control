import Head from 'next/head'
import Image from 'next/image'
import { Inter } from 'next/font/google'
import styles from '@/styles/Home.module.css'
import React from 'react'

import LoginBug from '../components/login_bug.tsx'
import { EnvironmentalBugContainer } from '../components/environmental_bug.tsx'
import { moment } from 'moment';

import * as mqtt from 'mqtt'

const inter = Inter({ subsets: ['latin'] })

let client = {} as mqtt.Client;

export default function Home() {

  const [connectionStatus, setConnectionStatus] = React.useState(false);
  const [connectionError, setConnectionError] = React.useState({} as Error);
  const [connectionBroker, setConnectionBroker] = React.useState("");
  const [environmentStatus, setEnvironmentStatus] = React.useState({});

  function ConnectClient(url, options) {
    console.log("Connecting to", url);
    client = mqtt.connect(url, options)

    client.on('connect', () => {
      console.log("We're In.");
      setConnectionStatus(true);
      setConnectionBroker(url);
      setConnectionError({});

      client.subscribe('$SYS/broker/clients/connected')
      client.subscribe('environment')
    });

    client.on('error', (err) => {
      console.log("Help I've fallen and I can't get up.", err);
      DisconnectClient();
      setConnectionError(err);
    });

    client.on('message', (topic, message) => {
      console.log("Received message on", topic, message);
      if (topic === 'environment') {
        const jsonMessage = Buffer.from(message).toString('utf8')
        const parsedData = {...JSON.parse(jsonMessage), last_updated:new Date()};
        console.log("Incoming Data", parsedData);
        console.log("Existing Data", environmentStatus);
        setEnvironmentStatus(environmentStatus => {
          return {...environmentStatus, [parsedData.zone]:parsedData };
        });
      }
    });
  }

  function DisconnectClient() {
    client.end();
    setConnectionStatus(false);
  }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div className={styles.description}>
          <LoginBug 
            handleConnect={ConnectClient} 
            handleDisconnect={DisconnectClient}
            connectionStatus={connectionStatus}
            connectionError={connectionError}
            connectionBroker={connectionBroker}/>
        </div>
        <div className={styles.description}><h1 >Environments</h1></div>
        <EnvironmentalBugContainer environmentStatus={environmentStatus}/>
      </main>
    </>
  )
}
